/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../src/accordion/accordion-panel.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from '@angular/core/src/linker/query_list';
import * as import11 from '@angular/core/src/linker/view_container';
import * as import12 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import13 from '../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import14 from '@angular/core/src/linker/template_ref';
import * as import15 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import16 from '@angular/common/src/directives/ng_if';
import * as import17 from '@angular/common/src/directives/ng_for';
export class Wrapper_AccordionPanelComponent {
  /*private*/ _eventHandler:Function;
  context:import0.AccordionPanelComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  subscription0:any;
  subscription1:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.AccordionPanelComponent(p0);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
  }
  check_panel(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.panel = currValue;
      this._expr_0 = currValue;
    }
  }
  check_index(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.index = currValue;
      this._expr_1 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_2:any = this.context.expanded;
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      view.renderer.setElementAttribute(el,'aria-expanded',((currVal_2 == null)? (null as any): currVal_2.toString()));
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = this.context._hidden;
    if (import3.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      view.renderer.setElementAttribute(el,'aria-hidden',((currVal_3 == null)? (null as any): currVal_3.toString()));
      this._expr_3 = currVal_3;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.expand.subscribe(_eventHandler.bind(view,'expand'))); }
    if (emit1) { (this.subscription1 = this.context.action.subscribe(_eventHandler.bind(view,'action'))); }
  }
}
var renderType_AccordionPanelComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_AccordionPanelComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.AccordionPanelComponent>;
  _AccordionPanelComponent_0_3:Wrapper_AccordionPanelComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_AccordionPanelComponent_Host0,renderType_AccordionPanelComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'j3-accordion-panel',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_AccordionPanelComponent0(this.viewUtils,this,0,this._el_0);
    this._AccordionPanelComponent_0_3 = new Wrapper_AccordionPanelComponent(new import9.ElementRef(this._el_0));
    this.compView_0.create(this._AccordionPanelComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._AccordionPanelComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.AccordionPanelComponent) && (0 === requestNodeIndex))) { return this._AccordionPanelComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._AccordionPanelComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this._AccordionPanelComponent_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._AccordionPanelComponent_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._AccordionPanelComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const AccordionPanelComponentNgFactory:import8.ComponentFactory<import0.AccordionPanelComponent> = new import8.ComponentFactory<import0.AccordionPanelComponent>('j3-accordion-panel',View_AccordionPanelComponent_Host0,import0.AccordionPanelComponent);
const styles_AccordionPanelComponent:any[] = ['[_nghost-%COMP%] {\n      position: absolute;\n      display: flex;\n      flex-flow: column nowrap;\n      width: 100%;\n      will-change: transform;\n    }\n    .animatable[_nghost-%COMP%] {\n      transition: transform 0.3s cubic-bezier(0, 0, 0.3, 1);    \n    }\n    \n    #tabContent[_ngcontent-%COMP%] {\n      overflow-x: hidden;\n      overflow-y: auto;\n    }\n    \n    .panelHeader[_ngcontent-%COMP%] {\n      display: flex;\n      flex-flow: row nowrap;\n      align-items: center;\n      padding: 0 12px;\n      height: 48px;\n      border: none;\n      border-bottom: 1px solid rgba(0,0,0,0.16);\n      position: relative;\n    }\n    .panelHeader[_ngcontent-%COMP%]:after {\n      content: \'\';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0,0,0,0.26);\n      opacity: 0;\n    }\n    .panelHeader[_ngcontent-%COMP%]:focus {\n      outline: none;\n    }\n    .panelHeader[_ngcontent-%COMP%]:hover {\n      cursor: pointer;\n    }\n    .panelHeader[_ngcontent-%COMP%]:focus:after, .panelHeader[_ngcontent-%COMP%]:hover:after {\n      opacity: 1;\n    }\n    \n    .panelName[_ngcontent-%COMP%] {\n      margin: 0;\n      font-variant: all-small-caps;\n    }\n    \n    #panelChildren[_ngcontent-%COMP%] {\n      list-style-type: none;\n      margin: 0;\n      padding: 0;\n    }\n    \n    .panelChild[_ngcontent-%COMP%] {\n      height: 48px;\n      display: flex;\n      flex-flow: row nowrap;\n      align-items: center;\n      position: relative;\n      padding: 0 12px;\n    }\n    .panelChild[_ngcontent-%COMP%]:hover {\n        cursor: pointer;\n    }'];
var renderType_AccordionPanelComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.Emulated,styles_AccordionPanelComponent,{});
export class View_AccordionPanelComponent0 extends import2.AppView<import0.AccordionPanelComponent> {
  _viewQuery_header_0:import10.QueryList<any>;
  _viewQuery_content_1:import10.QueryList<any>;
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import11.ViewContainer;
  _TemplateRef_3_5:any;
  _NgIf_3_6:import12.Wrapper_NgIf;
  _el_4:any;
  _text_5:any;
  _text_6:any;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _el_10:any;
  _text_11:any;
  _anchor_12:any;
  /*private*/ _vc_12:import11.ViewContainer;
  _TemplateRef_12_5:any;
  _NgFor_12_6:import13.Wrapper_NgFor;
  _text_13:any;
  _text_14:any;
  _text_15:any;
  /*private*/ _expr_24:any;
  /*private*/ _expr_25:any;
  /*private*/ _expr_26:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_AccordionPanelComponent0,renderType_AccordionPanelComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckOnce);
    this._expr_24 = import1.UNINITIALIZED;
    this._expr_25 = import1.UNINITIALIZED;
    this._expr_26 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_header_0 = new import10.QueryList<any>();
    this._viewQuery_content_1 = new import10.QueryList<any>();
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'button',new import3.InlineArray4(4,'class','panelHeader','role','tab'),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._vc_3 = new import11.ViewContainer(3,1,this,this._anchor_3);
    this._TemplateRef_3_5 = new import14.TemplateRef_(this,3,this._anchor_3);
    this._NgIf_3_6 = new import12.Wrapper_NgIf(this._vc_3.vcRef,this._TemplateRef_3_5);
    this._el_4 = import3.createRenderElement(this.renderer,this._el_1,'h4',new import3.InlineArray2(2,'class','panelName'),(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'',(null as any));
    this._text_6 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_7 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray4(4,'id','tabContent','role','tabpanel'),(null as any));
    this._text_9 = this.renderer.createText(this._el_8,'\n      ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_8,'ul',new import3.InlineArray2(2,'id','panelChildren'),(null as any));
    this._text_11 = this.renderer.createText(this._el_10,'\n        ',(null as any));
    this._anchor_12 = this.renderer.createTemplateAnchor(this._el_10,(null as any));
    this._vc_12 = new import11.ViewContainer(12,10,this,this._anchor_12);
    this._TemplateRef_12_5 = new import14.TemplateRef_(this,12,this._anchor_12);
    this._NgFor_12_6 = new import13.Wrapper_NgFor(this._vc_12.vcRef,this._TemplateRef_12_5,this.parentView.injectorGet(import15.IterableDiffers,this.parentIndex),this.ref);
    this._text_13 = this.renderer.createText(this._el_10,'\n      ',(null as any));
    this._text_14 = this.renderer.createText(this._el_8,'\n    ',(null as any));
    this._text_15 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_1,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_1));
    this._viewQuery_header_0.reset([new import9.ElementRef(this._el_1)]);
    this.context.header = this._viewQuery_header_0.first;
    this._viewQuery_content_1.reset([new import9.ElementRef(this._el_8)]);
    this.context.content = this._viewQuery_content_1.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._el_4,
      this._text_5,
      this._text_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._anchor_12,
      this._text_13,
      this._text_14,
      this._text_15
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import16.NgIf) && (3 === requestNodeIndex))) { return this._NgIf_3_6.context; }
    if (((token === import14.TemplateRef) && (12 === requestNodeIndex))) { return this._TemplateRef_12_5; }
    if (((token === import17.NgFor) && (12 === requestNodeIndex))) { return this._NgFor_12_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_3_0_0:any = this.context.panel.icon;
    this._NgIf_3_6.check_ngIf(currVal_3_0_0,throwOnChange,false);
    this._NgIf_3_6.ngDoCheck(this,this._anchor_3,throwOnChange);
    const currVal_12_0_0:any = this.context.panel.items;
    this._NgFor_12_6.check_ngForOf(currVal_12_0_0,throwOnChange,false);
    this._NgFor_12_6.ngDoCheck(this,this._anchor_12,throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
    this._vc_12.detectChangesInNestedViews(throwOnChange);
    const currVal_24:any = import3.inlineInterpolate(1,'',this.context.panelName,'');
    if (import3.checkBinding(throwOnChange,this._expr_24,currVal_24)) {
      this.renderer.setElementProperty(this._el_1,'id',currVal_24);
      this._expr_24 = currVal_24;
    }
    const currVal_25:any = import3.inlineInterpolate(1,' ',this.context.panel.name,'');
    if (import3.checkBinding(throwOnChange,this._expr_25,currVal_25)) {
      this.renderer.setText(this._text_5,currVal_25);
      this._expr_25 = currVal_25;
    }
    const currVal_26:any = this.context.panelName;
    if (import3.checkBinding(throwOnChange,this._expr_26,currVal_26)) {
      this.renderer.setElementAttribute(this._el_8,'aria-labelledby',((currVal_26 == null)? (null as any): currVal_26.toString()));
      this._expr_26 = currVal_26;
    }
  }
  destroyInternal():void {
    this._vc_3.destroyNestedViews();
    this._vc_12.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 3)) { return new View_AccordionPanelComponent1(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    if ((nodeIndex == 12)) { return new View_AccordionPanelComponent2(this.viewUtils,this,12,this._anchor_12,this._vc_12); }
    return (null as any);
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.togglePanel()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_AccordionPanelComponent1 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_AccordionPanelComponent1,renderType_AccordionPanelComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_2 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'i',new import3.InlineArray2(2,'class','material-icons'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2:any = import3.inlineInterpolate(1,'',this.parentView.context.panel.icon,'');
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setText(this._text_1,currVal_2);
      this._expr_2 = currVal_2;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_AccordionPanelComponent2 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_AccordionPanelComponent2,renderType_AccordionPanelComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_2 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'li',new import3.InlineArray2(2,'class','panelChild'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2:any = import3.inlineInterpolate(1,'\n          ',this.context.$implicit,'\n        ');
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setText(this._text_1,currVal_2);
      this._expr_2 = currVal_2;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.action.emit({
        panel: this.parentView.context.panel.name,
        item: this.context.$implicit
      }
      )) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}